{"version":3,"file":"mql.min.js","sources":["../node_modules/.pnpm/is-url-http@2.2.7/node_modules/is-url-http/lightweight.js","../node_modules/.pnpm/flattie@1.1.0/node_modules/flattie/dist/index.js","../node_modules/.pnpm/qss@2.0.3/node_modules/qss/dist/qss.m.js","../node_modules/.pnpm/mimic-fn@3.0.0/node_modules/mimic-fn/index.js","../node_modules/.pnpm/whoops@4.1.0/node_modules/whoops/lib/helpers.js","../node_modules/.pnpm/whoops@4.1.0/node_modules/whoops/lib/add-error-props.js","../node_modules/.pnpm/whoops@4.1.0/node_modules/whoops/lib/create-extend-error.js","../node_modules/.pnpm/whoops@4.1.0/node_modules/whoops/lib/create-error.js","../node_modules/.pnpm/whoops@4.1.0/node_modules/whoops/lib/index.js","../src/factory.js","../src/ky.js","../src/browser.js"],"sourcesContent":["'use strict'\n\nconst URL = global.window ? window.URL : require('url').URL\nconst REGEX_HTTP_PROTOCOL = /^https?:\\/\\//i\n\nmodule.exports = url => {\n  try {\n    return REGEX_HTTP_PROTOCOL.test(new URL(url).href)\n  } catch (err) {\n    return false\n  }\n}\n","function iter(output, nullish, sep, val, key) {\n\tvar k, pfx = key ? (key + sep) : key;\n\n\tif (val == null) {\n\t\tif (nullish) output[key] = val;\n\t} else if (typeof val != 'object') {\n\t\toutput[key] = val;\n\t} else if (Array.isArray(val)) {\n\t\tfor (k=0; k < val.length; k++) {\n\t\t\titer(output, nullish, sep, val[k], pfx + k);\n\t\t}\n\t} else {\n\t\tfor (k in val) {\n\t\t\titer(output, nullish, sep, val[k], pfx + k);\n\t\t}\n\t}\n}\n\nfunction flattie(input, glue, toNull) {\n\tvar output = {};\n\tif (typeof input == 'object') {\n\t\titer(output, !!toNull, glue || '.', input, '');\n\t}\n\treturn output;\n}\n\nexports.flattie = flattie;","export function encode(obj, pfx) {\n\tvar k, i, tmp, str='';\n\n\tfor (k in obj) {\n\t\tif ((tmp = obj[k]) !== void 0) {\n\t\t\tif (Array.isArray(tmp)) {\n\t\t\t\tfor (i=0; i < tmp.length; i++) {\n\t\t\t\t\tstr && (str += '&');\n\t\t\t\t\tstr += encodeURIComponent(k) + '=' + encodeURIComponent(tmp[i]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstr && (str += '&');\n\t\t\t\tstr += encodeURIComponent(k) + '=' + encodeURIComponent(tmp);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (pfx || '') + str;\n}\n\nfunction toValue(mix) {\n\tif (!mix) return '';\n\tvar str = decodeURIComponent(mix);\n\tif (str === 'false') return false;\n\tif (str === 'true') return true;\n\treturn (+str * 0 === 0) ? (+str) : str;\n}\n\nexport function decode(str) {\n\tvar tmp, k, out={}, arr=str.split('&');\n\n\twhile (tmp = arr.shift()) {\n\t\ttmp = tmp.split('=');\n\t\tk = tmp.shift();\n\t\tif (out[k] !== void 0) {\n\t\t\tout[k] = [].concat(out[k], toValue(tmp.shift()));\n\t\t} else {\n\t\t\tout[k] = toValue(tmp.shift());\n\t\t}\n\t}\n\n\treturn out;\n}\n","'use strict';\n\nconst copyProperty = (to, from, property, ignoreNonConfigurable) => {\n\t// `Function#length` should reflect the parameters of `to` not `from` since we keep its body.\n\t// `Function#prototype` is non-writable and non-configurable so can never be modified.\n\tif (property === 'length' || property === 'prototype') {\n\t\treturn;\n\t}\n\n\tconst toDescriptor = Object.getOwnPropertyDescriptor(to, property);\n\tconst fromDescriptor = Object.getOwnPropertyDescriptor(from, property);\n\n\tif (!canCopyProperty(toDescriptor, fromDescriptor) && ignoreNonConfigurable) {\n\t\treturn;\n\t}\n\n\tObject.defineProperty(to, property, fromDescriptor);\n};\n\n// `Object.defineProperty()` throws if the property exists, is not configurable and either:\n//  - one its descriptors is changed\n//  - it is non-writable and its value is changed\nconst canCopyProperty = function (toDescriptor, fromDescriptor) {\n\treturn toDescriptor === undefined || toDescriptor.configurable || (\n\t\ttoDescriptor.writable === fromDescriptor.writable &&\n\t\ttoDescriptor.enumerable === fromDescriptor.enumerable &&\n\t\ttoDescriptor.configurable === fromDescriptor.configurable &&\n\t\t(toDescriptor.writable || toDescriptor.value === fromDescriptor.value)\n\t);\n};\n\nconst changePrototype = (to, from) => {\n\tconst fromPrototype = Object.getPrototypeOf(from);\n\tif (fromPrototype === Object.getPrototypeOf(to)) {\n\t\treturn;\n\t}\n\n\tObject.setPrototypeOf(to, fromPrototype);\n};\n\nconst wrappedToString = (withName, fromBody) => `/* Wrapped ${withName}*/\\n${fromBody}`;\n\nconst toStringDescriptor = Object.getOwnPropertyDescriptor(Function.prototype, 'toString');\nconst toStringName = Object.getOwnPropertyDescriptor(Function.prototype.toString, 'name');\n\n// We call `from.toString()` early (not lazily) to ensure `from` can be garbage collected.\n// We use `bind()` instead of a closure for the same reason.\n// Calling `from.toString()` early also allows caching it in case `to.toString()` is called several times.\nconst changeToString = (to, from, name) => {\n\tconst withName = name === '' ? '' : `with ${name.trim()}() `;\n\tconst newToString = wrappedToString.bind(null, withName, from.toString());\n\t// Ensure `to.toString.toString` is non-enumerable and has the same `same`\n\tObject.defineProperty(newToString, 'name', toStringName);\n\tObject.defineProperty(to, 'toString', {...toStringDescriptor, value: newToString});\n};\n\nconst mimicFn = (to, from, {ignoreNonConfigurable = false} = {}) => {\n\tconst {name} = to;\n\n\tfor (const property of Reflect.ownKeys(from)) {\n\t\tcopyProperty(to, from, property, ignoreNonConfigurable);\n\t}\n\n\tchangePrototype(to, from);\n\tchangeToString(to, from, name);\n\n\treturn to;\n};\n\nmodule.exports = mimicFn;\n","'use strict'\n\nmodule.exports = {\n  isFunction: obj => typeof obj === 'function',\n  isString: obj => typeof obj === 'string',\n  composeErrorMessage: (code, description) => `${code}, ${description}`,\n  inherits: (ctor, superCtor) => {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    })\n  }\n}\n","'use strict'\n\nconst {isFunction, composeErrorMessage} = require('./helpers')\n\nfunction interfaceObject (error, ...props) {\n  Object.assign(error, ...props)\n\n  error.description = isFunction(error.message) ? error.message(error) : error.message\n\n  error.message = error.code\n   ? composeErrorMessage(error.code, error.description)\n   : error.description\n}\n\nmodule.exports = interfaceObject\n","'use strict'\n\nconst cleanStack = require('clean-stack')\nconst mimicFn = require('mimic-fn')\n\nconst addErrorProps = require('./add-error-props')\nconst {isString} = require('./helpers')\n\nfunction createExtendError (ErrorClass, classProps) {\n  function ExtendError (props) {\n    const error = new ErrorClass()\n    const errorProps = isString(props) ? {message: props} : props\n    addErrorProps(error, classProps, errorProps)\n\n    error.stack = cleanStack(error.stack)\n    return error\n  }\n\n  ExtendError.prototype = ErrorClass.prototype\n  mimicFn(ExtendError, ErrorClass)\n\n  return ExtendError\n}\n\nmodule.exports = createExtendError\n","'use strict'\n\nconst {inherits} = require('./helpers')\nconst mimicFn = require('mimic-fn')\n\nconst REGEX_CLASS_NAME = /[^0-9a-zA-Z_$]/\n\nfunction createError (className) {\n  if (typeof className !== 'string') {\n    throw new TypeError('Expected className to be a string')\n  }\n\n  if (REGEX_CLASS_NAME.test(className)) {\n    throw new Error('className contains invalid characters')\n  }\n\n  function ErrorClass () {\n    Object.defineProperty(this, 'name', {\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    Error.captureStackTrace(this, this.constructor)\n  }\n\n  inherits(ErrorClass, Error)\n  mimicFn(ErrorClass, Error)\n  return ErrorClass\n}\n\nmodule.exports = createError\n","'use strict'\n\nconst createExtendError = require('./create-extend-error')\nconst createError = require('./create-error')\n\nconst createErrorClass = ErrorClass => (className, props) => {\n  const errorClass = createError(className || ErrorClass.name)\n  return createExtendError(errorClass, props)\n}\n\nmodule.exports = createErrorClass(Error)\nmodule.exports.type = createErrorClass(TypeError)\nmodule.exports.range = createErrorClass(RangeError)\nmodule.exports.eval = createErrorClass(EvalError)\nmodule.exports.syntax = createErrorClass(SyntaxError)\nmodule.exports.reference = createErrorClass(ReferenceError)\nmodule.exports.uri = createErrorClass(URIError)\n","const ENDPOINT = {\n  FREE: 'https://api.microlink.io',\n  PRO: 'https://pro.microlink.io'\n}\n\nconst isObject = input => input !== null && typeof input === 'object'\n\nconst parseBody = (input, error, url) => {\n  try {\n    return JSON.parse(input)\n  } catch (_) {\n    const message = input || error.message\n\n    return {\n      status: 'error',\n      data: { url: message },\n      more: 'https://microlink.io/efatalclient',\n      code: 'EFATALCLIENT',\n      message,\n      url\n    }\n  }\n}\n\nconst factory = ({\n  VERSION,\n  MicrolinkError,\n  isUrlHttp,\n  stringify,\n  got,\n  flatten\n}) => {\n  const assertUrl = (url = '') => {\n    if (!isUrlHttp(url)) {\n      const message = `The \\`url\\` as \\`${url}\\` is not valid. Ensure it has protocol (http or https) and hostname.`\n      throw new MicrolinkError({\n        status: 'fail',\n        data: { url: message },\n        more: 'https://microlink.io/docs/api/api-parameters/url',\n        code: 'EINVALURLCLIENT',\n        message,\n        url\n      })\n    }\n  }\n\n  const mapRules = rules => {\n    if (!isObject(rules)) return\n    const flatRules = flatten(rules)\n    return Object.keys(flatRules).reduce(\n      (acc, key) => ({ ...acc, [`data.${key}`]: flatRules[key].toString() }),\n      {}\n    )\n  }\n\n  const fetchFromApi = async (apiUrl, opts = {}, retryCount = 0) => {\n    try {\n      const response = await got(apiUrl, opts)\n      return opts.responseType === 'buffer'\n        ? { body: response.body, response }\n        : { ...response.body, response }\n    } catch (err) {\n      const { response = {} } = err\n      const { statusCode, body: rawBody, headers, url: uri = apiUrl } = response\n      const isBuffer = Buffer.isBuffer(rawBody)\n\n      const body =\n        isObject(rawBody) && !isBuffer\n          ? rawBody\n          : parseBody(isBuffer ? rawBody.toString() : rawBody, err, uri)\n\n      if (body.code === 'EFATALCLIENT' && retryCount++ < 2) {\n        return fetchFromApi(apiUrl, opts, retryCount)\n      }\n\n      throw MicrolinkError({\n        ...body,\n        message: body.message,\n        url: uri,\n        statusCode,\n        headers\n      })\n    }\n  }\n\n  const getApiUrl = (\n    url,\n    { data, apiKey, endpoint, retry, cache, ...opts } = {},\n    { responseType = 'json', headers: gotHeaders, ...gotOpts } = {}\n  ) => {\n    const isPro = !!apiKey\n    const apiEndpoint = endpoint || ENDPOINT[isPro ? 'PRO' : 'FREE']\n\n    const apiUrl = `${apiEndpoint}?${stringify({\n      url,\n      ...mapRules(data),\n      ...flatten(opts)\n    })}`\n\n    const headers = isPro\n      ? { ...gotHeaders, 'x-api-key': apiKey }\n      : { ...gotHeaders }\n    return [apiUrl, { ...gotOpts, responseType, cache, retry, headers }]\n  }\n\n  const createMql = defaultOpts => async (url, opts, gotOpts) => {\n    assertUrl(url)\n    const [apiUrl, fetchOpts] = getApiUrl(url, opts, {\n      ...defaultOpts,\n      ...gotOpts\n    })\n    return fetchFromApi(apiUrl, fetchOpts)\n  }\n\n  const mql = createMql()\n  mql.MicrolinkError = MicrolinkError\n  mql.getApiUrl = getApiUrl\n  mql.fetchFromApi = fetchFromApi\n  mql.mapRules = mapRules\n  mql.version = VERSION\n  mql.stream = got.stream\n  mql.buffer = createMql({ responseType: 'buffer' })\n\n  return mql\n}\n\nmodule.exports = factory\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ky = {}));\n})(this, (function (exports) { 'use strict';\n\n    // eslint-lint-disable-next-line @typescript-eslint/naming-convention\n    class HTTPError extends Error {\n        constructor(response, request, options) {\n            const code = (response.status || response.status === 0) ? response.status : '';\n            const title = response.statusText || '';\n            const status = `${code} ${title}`.trim();\n            const reason = status ? `status code ${status}` : 'an unknown error';\n            super(`Request failed with ${reason}`);\n            this.name = 'HTTPError';\n            this.response = response;\n            this.request = request;\n            this.options = options;\n        }\n    }\n\n    class TimeoutError extends Error {\n        constructor(request) {\n            super('Request timed out');\n            this.name = 'TimeoutError';\n            this.request = request;\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    const isObject = (value) => value !== null && typeof value === 'object';\n\n    const validateAndMerge = (...sources) => {\n        for (const source of sources) {\n            if ((!isObject(source) || Array.isArray(source)) && typeof source !== 'undefined') {\n                throw new TypeError('The `options` argument must be an object');\n            }\n        }\n        return deepMerge({}, ...sources);\n    };\n    const mergeHeaders = (source1 = {}, source2 = {}) => {\n        const result = new globalThis.Headers(source1);\n        const isHeadersInstance = source2 instanceof globalThis.Headers;\n        const source = new globalThis.Headers(source2);\n        for (const [key, value] of source.entries()) {\n            if ((isHeadersInstance && value === 'undefined') || value === undefined) {\n                result.delete(key);\n            }\n            else {\n                result.set(key, value);\n            }\n        }\n        return result;\n    };\n    // TODO: Make this strongly-typed (no `any`).\n    const deepMerge = (...sources) => {\n        let returnValue = {};\n        let headers = {};\n        for (const source of sources) {\n            if (Array.isArray(source)) {\n                if (!Array.isArray(returnValue)) {\n                    returnValue = [];\n                }\n                returnValue = [...returnValue, ...source];\n            }\n            else if (isObject(source)) {\n                for (let [key, value] of Object.entries(source)) {\n                    if (isObject(value) && key in returnValue) {\n                        value = deepMerge(returnValue[key], value);\n                    }\n                    returnValue = { ...returnValue, [key]: value };\n                }\n                if (isObject(source.headers)) {\n                    headers = mergeHeaders(headers, source.headers);\n                    returnValue.headers = headers;\n                }\n            }\n        }\n        return returnValue;\n    };\n\n    const supportsAbortController = typeof globalThis.AbortController === 'function';\n    const supportsStreams = typeof globalThis.ReadableStream === 'function';\n    const supportsFormData = typeof globalThis.FormData === 'function';\n    const requestMethods = ['get', 'post', 'put', 'patch', 'head', 'delete'];\n    const responseTypes = {\n        json: 'application/json',\n        text: 'text/*',\n        formData: 'multipart/form-data',\n        arrayBuffer: '*/*',\n        blob: '*/*',\n    };\n    // The maximum value of a 32bit int (see issue #117)\n    const maxSafeTimeout = 2147483647;\n    const stop = Symbol('stop');\n\n    const normalizeRequestMethod = (input) => requestMethods.includes(input) ? input.toUpperCase() : input;\n    const retryMethods = ['get', 'put', 'head', 'delete', 'options', 'trace'];\n    const retryStatusCodes = [408, 413, 429, 500, 502, 503, 504];\n    const retryAfterStatusCodes = [413, 429, 503];\n    const defaultRetryOptions = {\n        limit: 2,\n        methods: retryMethods,\n        statusCodes: retryStatusCodes,\n        afterStatusCodes: retryAfterStatusCodes,\n        maxRetryAfter: Number.POSITIVE_INFINITY,\n    };\n    const normalizeRetryOptions = (retry = {}) => {\n        if (typeof retry === 'number') {\n            return {\n                ...defaultRetryOptions,\n                limit: retry,\n            };\n        }\n        if (retry.methods && !Array.isArray(retry.methods)) {\n            throw new Error('retry.methods must be an array');\n        }\n        if (retry.statusCodes && !Array.isArray(retry.statusCodes)) {\n            throw new Error('retry.statusCodes must be an array');\n        }\n        return {\n            ...defaultRetryOptions,\n            ...retry,\n            afterStatusCodes: retryAfterStatusCodes,\n        };\n    };\n\n    // `Promise.race()` workaround (#91)\n    const timeout = async (request, abortController, options) => new Promise((resolve, reject) => {\n        const timeoutId = setTimeout(() => {\n            if (abortController) {\n                abortController.abort();\n            }\n            reject(new TimeoutError(request));\n        }, options.timeout);\n        /* eslint-disable promise/prefer-await-to-then */\n        void options\n            .fetch(request)\n            .then(resolve)\n            .catch(reject)\n            .then(() => {\n            clearTimeout(timeoutId);\n        });\n        /* eslint-enable promise/prefer-await-to-then */\n    });\n    const delay = async (ms) => new Promise(resolve => {\n        setTimeout(resolve, ms);\n    });\n\n    class Ky {\n        // eslint-disable-next-line complexity\n        constructor(input, options = {}) {\n            var _a, _b;\n            this._retryCount = 0;\n            this._input = input;\n            this._options = {\n                // TODO: credentials can be removed when the spec change is implemented in all browsers. Context: https://www.chromestatus.com/feature/4539473312350208\n                credentials: this._input.credentials || 'same-origin',\n                ...options,\n                headers: mergeHeaders(this._input.headers, options.headers),\n                hooks: deepMerge({\n                    beforeRequest: [],\n                    beforeRetry: [],\n                    afterResponse: [],\n                }, options.hooks),\n                method: normalizeRequestMethod((_a = options.method) !== null && _a !== void 0 ? _a : this._input.method),\n                // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n                prefixUrl: String(options.prefixUrl || ''),\n                retry: normalizeRetryOptions(options.retry),\n                throwHttpErrors: options.throwHttpErrors !== false,\n                timeout: typeof options.timeout === 'undefined' ? 10000 : options.timeout,\n                fetch: (_b = options.fetch) !== null && _b !== void 0 ? _b : globalThis.fetch.bind(globalThis),\n            };\n            if (typeof this._input !== 'string' && !(this._input instanceof URL || this._input instanceof globalThis.Request)) {\n                throw new TypeError('`input` must be a string, URL, or Request');\n            }\n            if (this._options.prefixUrl && typeof this._input === 'string') {\n                if (this._input.startsWith('/')) {\n                    throw new Error('`input` must not begin with a slash when using `prefixUrl`');\n                }\n                if (!this._options.prefixUrl.endsWith('/')) {\n                    this._options.prefixUrl += '/';\n                }\n                this._input = this._options.prefixUrl + this._input;\n            }\n            if (supportsAbortController) {\n                this.abortController = new globalThis.AbortController();\n                if (this._options.signal) {\n                    this._options.signal.addEventListener('abort', () => {\n                        this.abortController.abort();\n                    });\n                }\n                this._options.signal = this.abortController.signal;\n            }\n            this.request = new globalThis.Request(this._input, this._options);\n            if (this._options.searchParams) {\n                // eslint-disable-next-line unicorn/prevent-abbreviations\n                const textSearchParams = typeof this._options.searchParams === 'string'\n                    ? this._options.searchParams.replace(/^\\?/, '')\n                    : new URLSearchParams(this._options.searchParams).toString();\n                // eslint-disable-next-line unicorn/prevent-abbreviations\n                const searchParams = '?' + textSearchParams;\n                const url = this.request.url.replace(/(?:\\?.*?)?(?=#|$)/, searchParams);\n                // To provide correct form boundary, Content-Type header should be deleted each time when new Request instantiated from another one\n                if (((supportsFormData && this._options.body instanceof globalThis.FormData)\n                    || this._options.body instanceof URLSearchParams) && !(this._options.headers && this._options.headers['content-type'])) {\n                    this.request.headers.delete('content-type');\n                }\n                this.request = new globalThis.Request(new globalThis.Request(url, this.request), this._options);\n            }\n            if (this._options.json !== undefined) {\n                this._options.body = JSON.stringify(this._options.json);\n                this.request.headers.set('content-type', 'application/json');\n                this.request = new globalThis.Request(this.request, { body: this._options.body });\n            }\n        }\n        // eslint-disable-next-line @typescript-eslint/promise-function-async\n        static create(input, options) {\n            const ky = new Ky(input, options);\n            const fn = async () => {\n                if (ky._options.timeout > maxSafeTimeout) {\n                    throw new RangeError(`The \\`timeout\\` option cannot be greater than ${maxSafeTimeout}`);\n                }\n                // Delay the fetch so that body method shortcuts can set the Accept header\n                await Promise.resolve();\n                let response = await ky._fetch();\n                for (const hook of ky._options.hooks.afterResponse) {\n                    // eslint-disable-next-line no-await-in-loop\n                    const modifiedResponse = await hook(ky.request, ky._options, ky._decorateResponse(response.clone()));\n                    if (modifiedResponse instanceof globalThis.Response) {\n                        response = modifiedResponse;\n                    }\n                }\n                ky._decorateResponse(response);\n                if (!response.ok && ky._options.throwHttpErrors) {\n                    throw new HTTPError(response, ky.request, ky._options);\n                }\n                // If `onDownloadProgress` is passed, it uses the stream API internally\n                /* istanbul ignore next */\n                if (ky._options.onDownloadProgress) {\n                    if (typeof ky._options.onDownloadProgress !== 'function') {\n                        throw new TypeError('The `onDownloadProgress` option must be a function');\n                    }\n                    if (!supportsStreams) {\n                        throw new Error('Streams are not supported in your environment. `ReadableStream` is missing.');\n                    }\n                    return ky._stream(response.clone(), ky._options.onDownloadProgress);\n                }\n                return response;\n            };\n            const isRetriableMethod = ky._options.retry.methods.includes(ky.request.method.toLowerCase());\n            const result = (isRetriableMethod ? ky._retry(fn) : fn());\n            for (const [type, mimeType] of Object.entries(responseTypes)) {\n                result[type] = async () => {\n                    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n                    ky.request.headers.set('accept', ky.request.headers.get('accept') || mimeType);\n                    const response = (await result).clone();\n                    if (type === 'json') {\n                        if (response.status === 204) {\n                            return '';\n                        }\n                        if (options.parseJson) {\n                            return options.parseJson(await response.text());\n                        }\n                    }\n                    return response[type]();\n                };\n            }\n            return result;\n        }\n        _calculateRetryDelay(error) {\n            this._retryCount++;\n            if (this._retryCount < this._options.retry.limit && !(error instanceof TimeoutError)) {\n                if (error instanceof HTTPError) {\n                    if (!this._options.retry.statusCodes.includes(error.response.status)) {\n                        return 0;\n                    }\n                    const retryAfter = error.response.headers.get('Retry-After');\n                    if (retryAfter && this._options.retry.afterStatusCodes.includes(error.response.status)) {\n                        let after = Number(retryAfter);\n                        if (Number.isNaN(after)) {\n                            after = Date.parse(retryAfter) - Date.now();\n                        }\n                        else {\n                            after *= 1000;\n                        }\n                        if (typeof this._options.retry.maxRetryAfter !== 'undefined' && after > this._options.retry.maxRetryAfter) {\n                            return 0;\n                        }\n                        return after;\n                    }\n                    if (error.response.status === 413) {\n                        return 0;\n                    }\n                }\n                const BACKOFF_FACTOR = 0.3;\n                return BACKOFF_FACTOR * (2 ** (this._retryCount - 1)) * 1000;\n            }\n            return 0;\n        }\n        _decorateResponse(response) {\n            if (this._options.parseJson) {\n                response.json = async () => this._options.parseJson(await response.text());\n            }\n            return response;\n        }\n        async _retry(fn) {\n            try {\n                return await fn();\n                // eslint-disable-next-line @typescript-eslint/no-implicit-any-catch\n            }\n            catch (error) {\n                const ms = Math.min(this._calculateRetryDelay(error), maxSafeTimeout);\n                if (ms !== 0 && this._retryCount > 0) {\n                    await delay(ms);\n                    for (const hook of this._options.hooks.beforeRetry) {\n                        // eslint-disable-next-line no-await-in-loop\n                        const hookResult = await hook({\n                            request: this.request,\n                            options: this._options,\n                            error: error,\n                            retryCount: this._retryCount,\n                        });\n                        // If `stop` is returned from the hook, the retry process is stopped\n                        if (hookResult === stop) {\n                            return;\n                        }\n                    }\n                    return this._retry(fn);\n                }\n                throw error;\n            }\n        }\n        async _fetch() {\n            for (const hook of this._options.hooks.beforeRequest) {\n                // eslint-disable-next-line no-await-in-loop\n                const result = await hook(this.request, this._options);\n                if (result instanceof Request) {\n                    this.request = result;\n                    break;\n                }\n                if (result instanceof Response) {\n                    return result;\n                }\n            }\n            if (this._options.timeout === false) {\n                return this._options.fetch(this.request.clone());\n            }\n            return timeout(this.request.clone(), this.abortController, this._options);\n        }\n        /* istanbul ignore next */\n        _stream(response, onDownloadProgress) {\n            const totalBytes = Number(response.headers.get('content-length')) || 0;\n            let transferredBytes = 0;\n            return new globalThis.Response(new globalThis.ReadableStream({\n                async start(controller) {\n                    const reader = response.body.getReader();\n                    if (onDownloadProgress) {\n                        onDownloadProgress({ percent: 0, transferredBytes: 0, totalBytes }, new Uint8Array());\n                    }\n                    async function read() {\n                        const { done, value } = await reader.read();\n                        if (done) {\n                            controller.close();\n                            return;\n                        }\n                        if (onDownloadProgress) {\n                            transferredBytes += value.byteLength;\n                            const percent = totalBytes === 0 ? 0 : transferredBytes / totalBytes;\n                            onDownloadProgress({ percent, transferredBytes, totalBytes }, value);\n                        }\n                        controller.enqueue(value);\n                        await read();\n                    }\n                    await read();\n                },\n            }));\n        }\n    }\n\n    /*! MIT License © Sindre Sorhus */\n    const createInstance = (defaults) => {\n        // eslint-disable-next-line @typescript-eslint/promise-function-async\n        const ky = (input, options) => Ky.create(input, validateAndMerge(defaults, options));\n        for (const method of requestMethods) {\n            // eslint-disable-next-line @typescript-eslint/promise-function-async\n            ky[method] = (input, options) => Ky.create(input, validateAndMerge(defaults, options, { method }));\n        }\n        ky.create = (newDefaults) => createInstance(validateAndMerge(newDefaults));\n        ky.extend = (newDefaults) => createInstance(validateAndMerge(defaults, newDefaults));\n        ky.stop = stop;\n        return ky;\n    };\n    const ky = createInstance();\n\n    exports.HTTPError = HTTPError;\n    exports.TimeoutError = TimeoutError;\n    exports[\"default\"] = ky;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","'use strict'\n\nconst isUrlHttp = require('is-url-http/lightweight')\nconst { flattie: flatten } = require('flattie')\nconst { encode: stringify } = require('qss')\nconst whoops = require('whoops')\n\nconst factory = require('./factory')\nconst { default: ky } = require('./ky')\n\nconst MicrolinkError = whoops('MicrolinkError')\n\nconst got = async (url, opts) => {\n  try {\n    if (opts.timeout === undefined) opts.timeout = false\n    const response = await ky(url, opts)\n    const body = await response.json()\n    const { headers, status: statusCode, statusText: statusMessage } = response\n    return { url: response.url, body, headers, statusCode, statusMessage }\n  } catch (err) {\n    if (err.response) {\n      const { response } = err\n      err.response = {\n        ...response,\n        headers: [...response.headers.entries()].reduce(\n          (acc, [key, value]) => ({ ...acc, [key]: value }),\n          {}\n        ),\n        statusCode: response.status,\n        body: await response.text()\n      }\n    }\n    throw err\n  }\n}\n\nmodule.exports = factory({\n  MicrolinkError,\n  isUrlHttp,\n  stringify,\n  got,\n  flatten,\n  VERSION: '__MQL_VERSION__'\n})\n"],"names":["URL","global","window","require$$0","REGEX_HTTP_PROTOCOL","iter","output","nullish","sep","val","key","k","pfx","Array","isArray","length","toValue","mix","str","decodeURIComponent","input","glue","toNull","obj","i","tmp","encodeURIComponent","out","arr","split","shift","concat","copyProperty","to","from","property","ignoreNonConfigurable","toDescriptor","Object","getOwnPropertyDescriptor","fromDescriptor","canCopyProperty","defineProperty","undefined","configurable","writable","enumerable","value","wrappedToString","withName","fromBody","toStringDescriptor","Function","prototype","toStringName","toString","mimicFn_1","name","Reflect","ownKeys","fromPrototype","getPrototypeOf","setPrototypeOf","changePrototype","trim","newToString","bind","changeToString","helpers","isFunction","isString","composeErrorMessage","code","description","inherits","ctor","superCtor","super_","create","constructor","cleanStack","mimicFn","require$$1","addErrorProps","error","props","assign","message","require$$3","createExtendError_1","ErrorClass","classProps","ExtendError","errorProps","stack","REGEX_CLASS_NAME","createExtendError","createError","className","TypeError","test","Error","this","captureStackTrace","createErrorClass","errorClass","RangeError","EvalError","SyntaxError","ReferenceError","URIError","ENDPOINT","FREE","PRO","isObject","factory_1","VERSION","MicrolinkError","isUrlHttp","stringify","got","flatten","mapRules","rules","flatRules","keys","reduce","acc","fetchFromApi","async","apiUrl","opts","retryCount","response","responseType","body","err","statusCode","rawBody","headers","url","uri","isBuffer","Buffer","JSON","parse","_","status","data","more","parseBody","getApiUrl","apiKey","endpoint","retry","cache","gotHeaders","gotOpts","isPro","createMql","defaultOpts","assertUrl","fetchOpts","mql","version","stream","buffer","exports","HTTPError","request","options","statusText","super","TimeoutError","validateAndMerge","sources","source","deepMerge","mergeHeaders","source1","source2","result","globalThis","Headers","isHeadersInstance","entries","delete","set","returnValue","supportsAbortController","AbortController","supportsStreams","ReadableStream","supportsFormData","FormData","requestMethods","responseTypes","json","text","formData","arrayBuffer","blob","maxSafeTimeout","stop","Symbol","normalizeRequestMethod","includes","toUpperCase","retryAfterStatusCodes","defaultRetryOptions","limit","methods","statusCodes","afterStatusCodes","maxRetryAfter","Number","POSITIVE_INFINITY","normalizeRetryOptions","timeout","abortController","Promise","resolve","reject","timeoutId","setTimeout","abort","fetch","then","catch","clearTimeout","delay","ms","Ky","_a","_b","_retryCount","_input","_options","credentials","hooks","beforeRequest","beforeRetry","afterResponse","method","prefixUrl","String","throwHttpErrors","Request","startsWith","endsWith","signal","addEventListener","searchParams","replace","URLSearchParams","static","ky","fn","_fetch","hook","modifiedResponse","_decorateResponse","clone","Response","ok","onDownloadProgress","_stream","toLowerCase","_retry","type","mimeType","get","parseJson","_calculateRetryDelay","retryAfter","after","isNaN","Date","now","Math","min","totalBytes","transferredBytes","controller","reader","getReader","read","done","close","byteLength","percent","enqueue","Uint8Array","createInstance","defaults","newDefaults","extend","factory","href","flattie","encode","require$$2","whoops","require$$4","default","require$$5","statusMessage"],"mappings":"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"}